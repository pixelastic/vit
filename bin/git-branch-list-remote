#!/usr/bin/env ruby
require_relative '../etc/git-helper/git_helper'
# Display the list of current remote branches
# Usage :
# $ git-branch-list-remote {remote}
# develop  9242a33
# master   7548e9a

Branch = Struct.new(:branch, :hash)
class BranchListRemote
  include GitHelper

  def initialize(*args)
    @args = get_real_args(args)
    elements = guess_elements(@args)
    @remoteName = elements[:remote]
  end

  def branch_list
    output = %x[git ls-remote --heads #{@remoteName} 2>/dev/null | awk '{print $2, $1}' | sort -V]
    branches = []
    output.each_line do |line|
      branch, hash = line.match(/^refs\/heads\/(.*) (.{7}).*\n$/).captures
      branches << Branch.new(branch, hash)
    end
    return branches
  end

  def run
    @branch_list = branch_list

    longest_branch = @branch_list.map {|obj| obj[:branch] }.group_by(&:size).max.last[0]

    @branch_list.each do |branch|
      branch_name = colorize(branch[:branch].ljust(longest_branch.size), branch_color(branch[:branch]))
      hash = colorize(branch[:hash], color(:hash))
      puts "  #{branch_name}  #{hash}"
    end
  end

end
BranchListRemote.new(*ARGV).run()

