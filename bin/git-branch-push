#!/usr/bin/env ruby
require_relative '../etc/git-helper/git_helper'
# Wrapper for pushing to remote
# - Will init the upstream branch on first push
# - Will allow user to specify a remote and a branch (default to origin and
#   current branch)
# - Is clever about what is specified : branch or remote
#
# Usage :
# $ git-remote-push
# $ git-remote-push remote (current_branch)
# $ git-remote-push (origin) branch
# $ git-remote-push remote branch
class GitRemotePush
  include GitHelper

  def initialize(*args)
    @flags = get_flag_args(args)
    @args = get_real_args(args)

    elements = guess_elements(@args)
    @remote_name = elements[:remote]
    @branch_name = elements[:branch]
  end

  def run
    @flags << '--set-upstream' if never_pushed?

    # We use the local-name:remote-name syntax for branches so we can push to
    # branches with a different name
    branch = "#{current_branch}:#{@branch_name}"



    # puts ("git push #{@flags.join(' ')} #{@remote_name} #{branch}")
    system("git push #{@flags.join(' ')} #{@remote_name} #{branch}")
  end
end
GitRemotePush.new(*ARGV).run
